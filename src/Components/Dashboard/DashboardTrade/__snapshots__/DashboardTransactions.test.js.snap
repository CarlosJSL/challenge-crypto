// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DashboardTransactions component should render 1`] = `
ReactWrapper {
  Symbol(enzyme.__unrendered__): <_default
    transactions={Array []}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "transactions": Array [],
    },
    "ref": null,
    "rendered": Object {
      "instance": <table
        class="ui very basic collapsing celled table"
      >
        <thead>
          <tr>
            <th>
              Trocou
            </th>
            <th>
              Por
            </th>
          </tr>
        </thead>
        <tbody />
      </table>,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <thead>
            <tr>
              <th>
                Trocou
              </th>
              <th>
                Por
              </th>
            </tr>
          </thead>,
          <tbody />,
        ],
        "className": "ui very basic collapsing celled table",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": <thead>
            <tr>
              <th>
                Trocou
              </th>
              <th>
                Por
              </th>
            </tr>
          </thead>,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <tr>
              <th>
                Trocou
              </th>
              <th>
                Por
              </th>
            </tr>,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": <tr>
                <th>
                  Trocou
                </th>
                <th>
                  Por
                </th>
              </tr>,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <th>
                    Trocou
                  </th>,
                  <th>
                    Por
                  </th>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": <th>
                    Trocou
                  </th>,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Trocou",
                  },
                  "ref": null,
                  "rendered": Array [
                    "Trocou",
                  ],
                  "type": "th",
                },
                Object {
                  "instance": <th>
                    Por
                  </th>,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Por",
                  },
                  "ref": null,
                  "rendered": Array [
                    "Por",
                  ],
                  "type": "th",
                },
              ],
              "type": "tr",
            },
          ],
          "type": "thead",
        },
        Object {
          "instance": <tbody />,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [],
          },
          "ref": null,
          "rendered": Array [
            Array [],
          ],
          "type": "tbody",
        },
      ],
      "type": "table",
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "transactions": Array [],
      },
      "ref": null,
      "rendered": Object {
        "instance": <table
          class="ui very basic collapsing celled table"
        >
          <thead>
            <tr>
              <th>
                Trocou
              </th>
              <th>
                Por
              </th>
            </tr>
          </thead>
          <tbody />
        </table>,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <thead>
              <tr>
                <th>
                  Trocou
                </th>
                <th>
                  Por
                </th>
              </tr>
            </thead>,
            <tbody />,
          ],
          "className": "ui very basic collapsing celled table",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": <thead>
              <tr>
                <th>
                  Trocou
                </th>
                <th>
                  Por
                </th>
              </tr>
            </thead>,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <tr>
                <th>
                  Trocou
                </th>
                <th>
                  Por
                </th>
              </tr>,
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": <tr>
                  <th>
                    Trocou
                  </th>
                  <th>
                    Por
                  </th>
                </tr>,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <th>
                      Trocou
                    </th>,
                    <th>
                      Por
                    </th>,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": <th>
                      Trocou
                    </th>,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Trocou",
                    },
                    "ref": null,
                    "rendered": Array [
                      "Trocou",
                    ],
                    "type": "th",
                  },
                  Object {
                    "instance": <th>
                      Por
                    </th>,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Por",
                    },
                    "ref": null,
                    "rendered": Array [
                      "Por",
                    ],
                    "type": "th",
                  },
                ],
                "type": "tr",
              },
            ],
            "type": "thead",
          },
          Object {
            "instance": <tbody />,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [],
            },
            "ref": null,
            "rendered": Array [
              Array [],
            ],
            "type": "tbody",
          },
        ],
        "type": "table",
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
